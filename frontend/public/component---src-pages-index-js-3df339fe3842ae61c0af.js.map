{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js"],"names":["Project","_ref","title","github","stack","url","image","index","React","createElement","className","Image","fluid","childImageSharp","map","item","key","id","href","target","rel","Projects","projects","showLink","Title","project","Object","assign","Link","to","FaArrowRight","Hero","allStrapiAbout","nodes","useStaticQuery","SocialLinks","data-weight","Jobs","data","allStrapiJobs","jobs","expandedIndex","setExpandedIndex","useState","isIconExpanded","setIsIconExpanded","maxHeights","setMaxHeights","contentRefs","useRef","useEffect","heights","current","ref","scrollHeight","strapiId","onClick","toggleAccordion","company","position","date","FaAngleDown","style","maxHeight","el","desc","descItem","FaAngleDoubleRight","name","allStrapiProjects","Layout","SEO","description"],"mappings":"qJA+CeA,MA5CCC,IAAkD,IAAjD,MAAEC,EAAK,OAAEC,EAAM,MAAEC,EAAK,IAAEC,EAAG,MAAEC,EAAK,MAAEC,GAAON,EACxD,OACIO,IAAAC,cAAA,WAASC,UAAU,WACfF,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAACE,IAAK,CACFC,MAAON,EAAMO,gBAAgBD,MAC7BF,UAAU,yBAEdF,IAAAC,cAAA,OAAKC,UAAU,4BACXF,IAAAC,cAAA,MAAIC,UAAU,mCACTR,GAELM,IAAAC,cAAA,OAAKC,UAAU,oCACVN,EAAMU,IAAKC,GACDP,IAAAC,cAAA,QAAMO,IAAKD,EAAKE,IAAKF,EAAKb,UAI7CM,IAAAC,cAAA,OAAKC,UAAU,yBACXF,IAAAC,cAAA,KACIS,KAAMf,EACNgB,OAAO,SACPC,IAAI,sBACJV,UAAS,2CACLP,EAAS,GAAK,iBAErB,eAGDK,IAAAC,cAAA,KACIS,KAAMb,EACNc,OAAO,SACPC,IAAI,sBACJV,UAAU,0CACb,iB,wBCZNW,IAlBEpB,IAAoC,IAAnC,SAAEqB,EAAQ,MAAEpB,EAAK,SAAEqB,GAAUtB,EAC7C,OACEO,IAAAC,cAAA,WAASC,UAAU,YACjBF,IAAAC,cAACe,IAAK,CAACtB,MAAOA,IACdM,IAAAC,cAAA,OAAKC,UAAU,2BACZY,EAASR,IAAI,CAACW,EAASlB,IACfC,IAAAC,cAACT,EAAO0B,OAAAC,OAAA,CAACX,IAAKS,EAAQR,GAAIV,MAAOA,GAAWkB,MAGtDF,GACCf,IAAAC,cAACmB,IAAI,CAACC,GAAG,YAAYnB,UAAU,oBAC7BF,IAAAC,cAAA,YAAM,oBAAuBD,IAAAC,cAACqB,IAAY,U,sGCkFrCC,MAlFFA,KACX,MACEC,gBAAgB,MAAEC,IAChBC,YAhBK,aAkBT,OACE1B,IAAAC,cAAA,UAAQC,UAAU,QAChBF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,WAASC,UAAU,cACjBF,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIC,UAAU,qBAAoB,kBAClCF,IAAAC,cAAA,MAAIC,UAAU,oBAAmB,mBACjCF,IAAAC,cAAA,MAAIC,UAAU,wBAAuB,4BACrCF,IAAAC,cAACmB,IAAI,CAACC,GAAG,WAAWnB,UAAU,wBAAuB,gBAGrDF,IAAAC,cAAC0B,IAAW,QAGhB3B,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,QAAM2B,cAAY,KAAI,QACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,cACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,QACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,OACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,cACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,MACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,aACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,SACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,YACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,WACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,eACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,UACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,aACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,QACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,UACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,OACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,2BACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,kBACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,YACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,WACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,kBACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,OACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,aACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,UACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,QACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,UACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,mBACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,cACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,YACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,YACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,mBACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,OACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,QACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,aACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,OACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,SACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,QACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,QACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,OACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,UACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,OACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,QACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,WACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,UACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,YACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,UACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,wBACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,WACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,WACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,cACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,cACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,gBACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,QACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,SACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,qBACtB5B,IAAAC,cAAA,QAAM2B,cAAY,KAAI,mB,wBCLjBC,MAlEFA,KACX,MAAMC,EAAOJ,YAlBJ,eAoBPK,eAAiBN,MAAOO,IACtBF,GACE,EAACG,EAAc,EAACC,GAAoBC,mBAAS,OAC7C,EAACC,EAAe,EAACC,GAAqBF,oBAAS,IAC/C,EAACG,EAAW,EAACC,GAAiBJ,mBAAS,IAEvCK,EAAcC,iBAAO,IAE3BC,oBAAU,KACR,MAAMC,EAAUH,EAAYI,QAAQtC,IAAKuC,GAAQA,EAAIC,aAAe,MACpEP,EAAcI,IACb,IAYH,OACE3C,IAAAC,cAAA,WAASC,UAAU,cACjBF,IAAAC,cAACe,IAAK,CAACtB,MAAM,eACbM,IAAAC,cAAA,OAAKC,UAAU,uBACZ8B,EAAK1B,IAAI,CAACC,EAAMR,IACfC,IAAAC,cAAA,OAAKO,IAAKD,EAAKwC,SAAU7C,UAAU,wBACjCF,IAAAC,cAAA,UACEC,UAAU,+BACV8C,QAASA,IAlBIjD,KACnBkC,IAAkBlC,GACpBmC,EAAiB,MACjBG,GAAkB,KAElBH,EAAiBnC,GACjBsC,GAAkB,KAYKY,CAAgBlD,IAE/BC,IAAAC,cAAA,QAAMC,UAAU,yCACdF,IAAAC,cAAA,MAAIC,UAAU,uDAAuDK,EAAK2C,SAC1ElD,IAAAC,cAAA,MAAIC,UAAU,mDAAmDK,EAAK4C,UACtEnD,IAAAC,cAAA,KAAGC,UAAU,+CAA+CK,EAAK6C,OAEnEpD,IAAAC,cAAA,QAAMC,UAAS,uCAAwCkC,GAAkBH,IAAkBlC,EAAQ,WAAa,KAC/GC,IAAAC,cAACoD,IAAW,QAGfrD,IAAAC,cAAA,OACEC,UAAS,sCAAuC+B,IAAkBlC,EAAQ,WAAa,IACvFuD,MAAO,CAAEC,UAAWtB,IAAkBlC,EAAQuC,EAAWvC,GAAS,QAGlEC,IAAAC,cAAA,OAAKC,UAAU,mDAAmD2C,IAAMW,GAAQhB,EAAYI,QAAQ7C,GAASyD,GAC1GjD,EAAKkD,KAAKnD,IAAKoD,GACd1D,IAAAC,cAAA,OAAKO,IAAKkD,EAASjD,GAAIP,UAAU,2CAC/BF,IAAAC,cAAC0D,IAAkB,CAACzD,UAAU,kDAC9BF,IAAAC,cAAA,SAAIyD,EAASE,e,wBCrElBnE,cAAe,IAAd,KAAEqC,GAAMrC,EACtB,MACEoE,mBAAqBpC,MAAOX,IAC1BgB,EACJ,OACE9B,IAAAC,cAAC6D,IAAM,KACL9D,IAAAC,cAAC8D,IAAG,CAACrE,MAAM,OAAOsE,YAAY,0BAC9BhE,IAAAC,cAACsB,EAAI,MACLvB,IAAAC,cAAC4B,EAAI,MACL7B,IAAAC,cAACY,IAAQ,CAACC,SAAUA,EAAUpB,MAAM,oBAAoBqB,UAAQ","file":"component---src-pages-index-js-3df339fe3842ae61c0af.js","sourcesContent":["import React from \"react\";\nimport Image from \"gatsby-image\";\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\";\nconst Project = ({ title, github, stack, url, image, index }) => {\n    return (\n        <article className=\"project\">\n            <div className=\"project__card\">\n                <Image\n                    fluid={image.childImageSharp.fluid}\n                    className=\"project__card__image\"\n                />\n                <div className=\"project__card__container\">\n                    <h3 className=\"project__card__container__title\">\n                        {title}\n                    </h3>\n                    <div className=\"project__card__container__stacks\">\n                        {stack.map((item) => {\n                            return <span key={item.id}>{item.title}</span>;\n                        })}\n                    </div>\n                </div>\n                <div className=\"project__card__footer\">\n                    <a\n                        href={github}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className={`project__card__container__footer__icon ${\n                            github ? \"\" : \"empty-github\"\n                        }`}\n                    >\n                        Github Link\n                    </a>\n                    <a\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"project__card__container__footer__icon\"\n                    >\n                        View Live\n                      \n                    </a>\n                </div>\n            </div>\n        </article>\n    );\n};\n\nexport default Project;\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\nimport { FaArrowRight } from \"react-icons/fa\";\n\n\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"projects\">\n      <Title title={title} />\n      <div className=\"projects__inner-wrapper\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"projects__button\">\n          <span>See All Projects</span><FaArrowRight />\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\n\nconst query = graphql`\n  {\n    allStrapiAbout {\n      nodes {\n        stack {\n          id\n          title\n        }\n      }\n    }\n  }\n`\n\nconst Hero = () => {\n  const {\n    allStrapiAbout: { nodes },\n  } = useStaticQuery(query)\n\n  return (\n    <header className=\"hero\">\n      <div className=\"hero__container\">\n        <article className=\"hero__info\">\n          <div>\n            <h3 className=\"hero__info__title\">Hi, My name is</h3>\n            <h1 className=\"hero__info__name\">Taufikur Rahman</h1>\n            <h4 className=\"hero__info__subtitle\">I am a Software Engineer</h4>\n            <Link to=\"/contact\" className=\"hero__contact-button\">\n              Get in touch\n            </Link>\n            <SocialLinks />\n          </div>\n        </article>\n        <div className=\"hero__cloud\">\n          <span data-weight=\"2\">HTML</span>\n          <span data-weight=\"9\">Typescript</span>\n          <span data-weight=\"4\">Node</span>\n          <span data-weight=\"7\">PHP</span>\n          <span data-weight=\"9\">Javascript</span>\n          <span data-weight=\"5\">C#</span>\n          <span data-weight=\"3\">Bitbucket</span>\n          <span data-weight=\"7\">MySQL</span>\n          <span data-weight=\"4\">Firebase</span>\n          <span data-weight=\"4\">Laravel</span>\n          <span data-weight=\"9\">OrchardCore</span>\n          <span data-weight=\"2\">Apollo</span>\n          <span data-weight=\"8\">Wordpress</span>\n          <span data-weight=\"3\">yarn</span>\n          <span data-weight=\"7\">Strapi</span>\n          <span data-weight=\"2\">SQL</span>\n          <span data-weight=\"2\">Content Security Policy</span>\n          <span data-weight=\"8\">Octopus Deploy</span>\n          <span data-weight=\"1\">Tailwind</span>\n          <span data-weight=\"9\">GraphQL</span>\n          <span data-weight=\"3\">HTML Templates</span>\n          <span data-weight=\"9\">CSS</span>\n          <span data-weight=\"4\">Storybook</span>\n          <span data-weight=\"3\">Docker</span>\n          <span data-weight=\"5\">Next</span>\n          <span data-weight=\"9\">Gatsby</span>\n          <span data-weight=\"4\">Custom Elements</span>\n          <span data-weight=\"6\">Shadow DOM</span>\n          <span data-weight=\"8\">Teamcity</span>\n          <span data-weight=\"2\">Web APIs</span>\n          <span data-weight=\"5\">Design Patterns</span>\n          <span data-weight=\"8\">MVC</span>\n          <span data-weight=\"4\">MVVM</span>\n          <span data-weight=\"5\">Bootstrap</span>\n          <span data-weight=\"2\">BEM</span>\n          <span data-weight=\"9\">React</span>\n          <span data-weight=\"4\">LESS</span>\n          <span data-weight=\"5\">Sass</span>\n          <span data-weight=\"3\">Git</span>\n          <span data-weight=\"8\">Github</span>\n          <span data-weight=\"1\">npm</span>\n          <span data-weight=\"4\">Vite</span>\n          <span data-weight=\"2\">Webpack</span>\n          <span data-weight=\"5\">Parcel</span>\n          <span data-weight=\"8\">Prettier</span>\n          <span data-weight=\"6\">ESLint</span>\n          <span data-weight=\"1\">OWASP Security Risks</span>\n          <span data-weight=\"4\">Cypress</span>\n          <span data-weight=\"5\">Jasmine</span>\n          <span data-weight=\"6\">Protractor</span>\n          <span data-weight=\"3\">Playwright</span>\n          <span data-weight=\"9\">BrowserStack</span>\n          <span data-weight=\"3\">CORS</span>\n          <span data-weight=\"7\">HTTPS</span>\n          <span data-weight=\"4\">Agile Development</span>\n          <span data-weight=\"7\">Code Review</span>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Hero\n","import React, { useState, useRef, useEffect } from \"react\"\nimport Title from \"./Title\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { FaAngleDoubleRight, FaAngleDown, FaAngleUp } from \"react-icons/fa\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: { fields: strapiId, order: DESC }) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data = useStaticQuery(query)\n  const {\n    allStrapiJobs: { nodes: jobs },\n  } = data\n  const [expandedIndex, setExpandedIndex] = useState(null)\n  const [isIconExpanded, setIsIconExpanded] = useState(false)\n  const [maxHeights, setMaxHeights] = useState([])\n\n  const contentRefs = useRef([])\n\n  useEffect(() => {\n    const heights = contentRefs.current.map((ref) => ref.scrollHeight + \"px\")\n    setMaxHeights(heights)\n  }, [])\n\n  const toggleAccordion = (index) => {\n    if (expandedIndex === index) {\n      setExpandedIndex(null)\n      setIsIconExpanded(false)\n    } else {\n      setExpandedIndex(index)\n      setIsIconExpanded(true)\n    }\n  }\n\n  return (\n    <section className=\"experience\">\n      <Title title=\"Experience\" />\n      <div className=\"experience__wrapper\">\n        {jobs.map((item, index) => (\n          <div key={item.strapiId} className=\"experience__job-item\">\n            <button\n              className=\"experience__job-item__button\"\n              onClick={() => toggleAccordion(index)}\n            >\n              <span className=\"experience__job-item__button__content\">\n                <h4 className=\"experience__job-item__button__content__company-name\">{item.company}</h4>\n                <h3 className=\"experience__job-item__button__content__position\">{item.position}</h3>\n                <p className=\"experience__job-item__button__content__date\">{item.date}</p>\n              </span>\n              <span className={`experience__job-item__button__icon ${isIconExpanded && expandedIndex === index ? \"expanded\" : \"\"}`}>\n               <FaAngleDown />\n              </span>\n            </button>\n            <div\n              className={`experience__job-item__description ${expandedIndex === index ? \"expanded\" : \"\"}`}\n              style={{ maxHeight: expandedIndex === index ? maxHeights[index] : \"0px\" }}\n              \n            >\n              <div className=\"experience__job-item__description__inner-wrapper\" ref={(el) => (contentRefs.current[index] = el)}>\n                {item.desc.map((descItem) => (\n                  <div key={descItem.id} className=\"experience__job-item__description__item\">\n                    <FaAngleDoubleRight className=\"experience__job-item__description__item__icon\" />\n                    <p>{descItem.name}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Jobs\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport SEO from \"../components/SEO\"\nexport default ({ data }) => {\n  const {\n    allStrapiProjects: { nodes: projects },\n  } = data\n  return (\n    <Layout>\n      <SEO title=\"Home\" description=\"This is the home page\" />\n      <Hero />\n      <Jobs />\n      <Projects projects={projects} title=\"Featured Projects\" showLink />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: { featured: { eq: true } }) {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}